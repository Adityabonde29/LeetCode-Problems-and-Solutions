public class Solution {
    public string LongestPalindrome(string s) {
        if (s.Length == 0) return "";
        
        bool[][] dp = new bool[s.Length][];
        for (int i = 0; i < s.Length; i++) {
            dp[i] = new bool[s.Length];
            dp[i][i] = true;
        }

        int start = 0, maxLength = 1;

        for (int i = 0; i < s.Length - 1; i++) {
            if (s[i] == s[i + 1]) {
                dp[i][i + 1] = true;
                start = i;
                maxLength = 2;
            }
        }

        for (int length = 3; length <= s.Length; length++) {
            for (int i = 0; i < s.Length - length + 1; i++) {
                int j = i + length - 1;
                if (s[i] == s[j] && dp[i + 1][j - 1]) {
                    dp[i][j] = true;
                    start = i;
                    maxLength = length;
                }
            }
        }

        return s.Substring(start, maxLength);
    }
}