public class Solution
{
    public bool isrow(int[][] check, int row)
    {
        for (int j = 0; j < check[row].Length; j++)
        {
            if (check[row][j] != 1)
            {
                return false;
            }
        }
        return true;
    }

    public bool iscol(int[][] check, int col)
    {
        for (int i = 0; i < check.Length; i++)
        {
            if (check[i][col] != 1)
            {
                return false;
            }
        }
        return true;
    }

    public int FirstCompleteIndex(int[] arr, int[][] mat)
    {
        int m = mat.Length;
        int n = mat[0].Length;
        int[][] check = new int[m][];
        for (int i = 0; i < m; i++)
        {
            check[i] = new int[n];
        }

        Dictionary<int, (int, int)> valueToPosition = new Dictionary<int, (int, int)>();
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                valueToPosition[mat[i][j]] = (i, j);
            }
        }

        for (int i = 0; i < arr.Length; i++)
        {
            var (x, y) = valueToPosition[arr[i]];
            check[x][y] = 1;

            if (isrow(check, x) || iscol(check, y))
            {
                return i;
            }
        }

        return -1;
    }
}