public class Solution {

    public int solve(int[] cost , int n , List<int> dp){
        if(n < 2){
            return cost[n];
        }

        if(dp[n] == -1){
            dp[n] = cost[n] + Math.Min(solve(cost,n-1,dp) , solve(cost,n-2,dp));
        }

        return dp[n];
    }

    public int MinCostClimbingStairs(int[] cost) {
        int n = cost.Length;

        List<int> dp = new List<int>();

        for(int i = 0 ; i <= n ; i++ ){
            dp.Add(-1);
        }

        return Math.Min(solve(cost,n-1,dp) , solve(cost,n-2,dp));
    }
}