public class Solution 
{
    public int MinOperations(int[] nums, int k) 
    {
        PriorityQueue<long, long> pq = new();

        for(int i = 0; i < nums.Length; i++)
        {
            pq.Enqueue(nums[i], nums[i]);
        }
        int ans = 0;
        while(pq.Count >= 2)
        {
            long x = pq.Dequeue();
            long y = pq.Dequeue();
            if(x >= k && y >= k)
            {
                return ans;
            }
            else
            {
                long temp = 2 * Math.Min(x, y) + Math.Max(x, y);
                pq.Enqueue(temp, temp);
                ans++;
            }
        }
        return ans;
    }
}