public class Solution {
    public int solve(int n, List<int> dp){
        if(n == 0){
            return 0;
        }

        if(n == 1){
            return 1;
        } 

        if(n == 2){
            return 1;
        }

        if(dp[n] == -1){
            dp[n] = solve(n-1,dp) + solve(n-2,dp) + solve(n-3,dp); 
        }

        return dp[n];
    }
    public int Tribonacci(int n) {
        List<int> dp = new List<int>();

        for(int i = 0 ; i <= n ; i++ ){
            dp.Add(-1);
        }

        return solve(n,dp);
    }
}