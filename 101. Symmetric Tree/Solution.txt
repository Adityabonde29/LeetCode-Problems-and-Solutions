/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsSymmetric(TreeNode root) {
         var queue = new Queue<TreeNode>();

        queue.Enqueue(root.left);
        queue.Enqueue(root.right);

        while(queue.Count > 0)
        {
            var left = queue.Dequeue();
            var right = queue.Dequeue();
            
            if(left == null && right == null)
            {
                continue;
            }
            else if(left == null || right == null)
            {
               return false;
            }
            else if(left.val != right.val)
            {
               return false;
            } 
            else 
            {
                queue.Enqueue(left.left);
                queue.Enqueue(right.right);  
                queue.Enqueue(left.right);
                queue.Enqueue(right.left);  
            }
        }

        return true;
    }
}