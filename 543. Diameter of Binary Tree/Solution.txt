/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int height(TreeNode root) {
        if(root == null){
            return 0;
        }

        return Math.Max(height(root.left) , height(root.right)) + 1;
    }

    public int DiameterOfBinaryTree(TreeNode root) {
        if(root == null){
            return 0;
        }

        int opt1 = DiameterOfBinaryTree(root.left);
        int opt2 = DiameterOfBinaryTree(root.right);
        int opt3 = height(root.left) + height(root.right);

        return Math.Max(opt1 , Math.Max(opt2,opt3));
    }
}