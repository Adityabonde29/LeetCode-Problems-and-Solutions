public class Solution {
    public int count(Stack<int> s, int sum) {
        int c = 0;
        while (s.Count > 0) {
            c += s.Pop();
        }
        return Math.Max(c, sum);
    }

    public int MaxAscendingSum(int[] nums) {
        Stack<int> s = new Stack<int>();
        int sum = 0;

        for (int i = 0; i < nums.Length; i++) {
            if (s.Count == 0 || s.Peek() < nums[i]) {
                s.Push(nums[i]);
            } else {
                sum = count(s, sum);
                s.Clear();
                s.Push(nums[i]);
            }
        }

        sum = count(s, sum);

        return sum;
    }
}